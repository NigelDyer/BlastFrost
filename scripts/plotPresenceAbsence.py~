import matplotlib as mpl
mpl.use('Agg')


import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import sys

#plt.use('Agg')

sns.set(style="white")


input_file = sys.argv[1]

df = pd.read_csv(input_file,header=None,sep='\t')

#df.drop(df.columns[len(df.columns)-1], axis=1, inplace=True)

#df.drop(df.columns[0], axis=1, inplace=True)

#df[df.columns[len(df.columns)-1]] = df.sum(axis=0)
#df.sum(axis=0)

#df = df[0].str.split('/').str[1]

#df['A'], df['B'] = df[0].str.split('/', 1).str

df['strains'] = df[0].str.split('/').str[-1]

df.drop(df.columns[0],axis=1, inplace=True)
df = df.set_index('strains')

#df[0].str.split('/').str[0]

df['sum'] = df[list(df.columns)].sum(axis=1,numeric_only=True)

df.sort_values(by=['sum'],ascending=False, inplace=True)

df.drop(['sum'],axis=1,inplace=True)

print(df)




# Generate a large random dataset
#rs = np.random.RandomState(33)
#d = pd.DataFrame(data=rs.normal(size=(100, 26)),columns=list(ascii_letters[26:]))

# Compute the correlation matrix
#corr = d.corr()

# Generate a mask for the upper triangle
#mask = np.zeros_like(corr, dtype=np.bool)
#mask[np.triu_indices_from(mask)] = True

# Set up the matplotlib figure
#f, ax = plt.subplots(figsize=(11, 9))

# Generate a custom diverging colormap
#cmap = sns.diverging_palette(2, 10, as_cmap=True)

# Draw the heatmap with the mask and correct aspect ratio
g = sns.heatmap(df.head(50), cmap="Reds", vmax=1, vmin=0, square=False, linewidths=.5, cbar=False)

g.tick_params(axis='y',labelsize=3,labelrotation=45)
g.tick_params(axis='x',labelsize=5)


g.set_xlabel('query kmer start position',fontsize=7)
g.set_ylabel('reference strains',fontsize=7)

#plt.ylabel(fontsize=10)
plt.savefig("./heatmap.pdf", format="pdf")

#plt.show()
